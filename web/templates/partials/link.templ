package partials 

import (
	"strings"
	"fmt"
	"github.com/zmzlois/LinkGoGo/pkg/model"
)

func ImageTranform(image string, path templ.SafeURL, name string) string {

	pathString := string(path)
	if image == " " {
		if strings.Contains(pathString, "twitter") || strings.Contains(pathString, "x.com") {
			return (fmt.Sprintf(`<img src="%s" class="w-14 h-14 rounded" alt="avatar"/>`, "/dist/twitter.svg"))
		} else if strings.Contains(pathString, "github") {
			return "/dist/github.svg"
		} else if strings.Contains(pathString, "instagram") {
			return "/dist/instagram.svg"
		}
		return string(name[0])
	} else {
		return image
	}
}

templ Link (link *model.NewLinkInput) {
	<a href={ link.Url } class="w-full p-2 rounded bg-zinc-100 drop-shadow-sm content-center items-center flex group justify-between animate-pop">
		if strings.Contains(string(link.Url), "twitter") || strings.Contains(string(link.Url), "x.com") {
			<img src="/dist/twitter.svg" class="w-14 h-14 rounded" alt="avatar"/>
		} else if strings.Contains(string(link.Url), "github") {
			<img src="/dist/github.svg" class="w-14 h-14 rounded" alt="avatar"/>
		} else if link.Image != " " && strings.Contains(string(link.Url), "instagram") {
			<img src="/dist/instagram.svg" class="w-14 h-14 rounded" alt="avatar"/>
		} else {
			<div class="w-14 h-14 flex p-1 bg-zinc-900 rounded text-zinc-100  items-center justify-center">
				<p class="text-zinc-100 font-semibold text-3xl">{ ImageTranform(link.Image,link.Url, link.Title) }</p>
			</div>
		}
		<p>{ link.Title }</p>
		<div class="w-10 h-10 p-2 flex rounded-full bg-inherit group-hover:bg-zinc-300 items-center transition-colors content-center">
			<img src="/dist/dot-horizontal.svg" class="group-hover:block hidden w-6 h-6"/>
		</div>
	</a>
}
